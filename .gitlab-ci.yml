image: node:latest

stages:
    - build
    - deploy

.changes: &changes
    - inference/src/**/*
    - inference/Cargo.*
    - public/**/*
    - src/**/*
    - '*.config.*'
    - index.html
    - package.json
    - tsconfig*.json
    - pnpm-lock.yaml
    - .gitlab-ci.yml
    - .prettier*

build:
    variables:
        CARGO_HOME: $CI_PROJECT_DIR/.cargo
        RUSTUP_HOME: $CI_PROJECT_DIR/.rustup
    stage: build
    cache:
        - key:
              prefix: $CI_MERGE_REQUEST_IID
              files:
                  - inference/Cargo.lock
                  - pnpm-lock.yaml
          paths:
              - $CARGO_HOME
              - $RUSTUP_HOME
              - .pnpm/v3/
              - inference/target/
    script:
        # Rust configuration + build
        - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        - . "$CARGO_HOME/env"
        - rustup update
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        - cd inference
        - cargo check
        - cargo clippy
        - wasm-pack build --release --target bundler
        - cd ..
        # TypeScript configuration + build
        - corepack enable
        - corepack install
        - pnpm config set store-dir .pnpm
        - pnpm install
        - pnpm run lint
        - pnpm run check
        - pnpm run build
        - pnpm run test -- --run
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          changes: *changes
        - if: $CI_MERGE_REQUEST_ID
          changes: *changes
    artifacts:
        paths: ['dist']

pages:
    image: alpine:latest
    stage: deploy
    dependencies:
        - build
    before_script:
        - apk update
        - apk add --no-cache brotli gzip
    script:
        - echo Compressing files...
        - find dist -type f \( -name '*.js' -o -name '*.html' -o -name '*.css' -o -name '*.wasm' \)  -exec gzip -fk {} \;
        - find dist -type f \( -name '*.js' -o -name '*.html' -o -name '*.css' -o -name '*.wasm' \)  -exec brotli -fk {} \;
        - echo Done. Deploying to Pages
    rules:
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
          changes: *changes
    artifacts:
        paths: ['dist']
    publish: dist
